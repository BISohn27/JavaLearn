package app;

/*
 * class
 * 	-객체를 정의해 놓은 것 -> 객체를 생성 하기 위한 템플릿(templete)
 * 	-객체의 구성 및 생성에 쓰임.
 * 
 * object
 * 	-실생활에 존재하는 것들을 모두 표현함.
 * 	-속성(특성)과 기능으로 구성.
 * 
 * object oriented program: 사물이나 개념을 "속성과 기능을 가진 객체"로 모델링하고, 이들의 관계를 정의함.
 * 							(self-contained Component: 스스로 존재하는 자)
 *
 * 자바에서의 객체 지향 3단계
 * 	1) 객체 모델링
 * 		프로그래밍 하고자 하는 객체의 속성과 필요한 기능을 정리한다.
 * 	2) 클래스 정의
 * 		객체를 실제로 사용하기 위해서, 클래스라는 형태로 객체를 표현한다.
 * 	3) 객체 생성과 사용
 * 		정의된 클래스를 이용해서, 메모리 상에 객체(object)를 생성(instantiation)하고, 사용한다. (instance)
 * 
 * 생성자(constructor)
 * 	-객체 지향 프로그래밍(OOP)에서 쓰이는 객체 초기화 함수
 * 	-객체의 생성 시에만 호출되어 메모리 생성과 동시에 객체의 데이터를 초기화하는 역할을 함.
 * 	-특징
 * 		1)생성자의 이름은 클래스의 이름과 동일하게 사용
 * 		2)오버로딩(overloading) 가능함
 * 		3)반환형을 사용하지 않음
 * 		4)기본 생성자의 개념이 존재함
 * 		5)멤버 변수 초기화 역할을 가짐
 * 
 * 표현)
 * -클래스 :
 * 		[접근제어자] class 클래스명 {
 * 			변수, 생성자, 메소드를 정의 함.
 * 		}
 * 
 * -객체 :
 * 		[참조형] 참조 변수명 = new [클래스명]();
 */
public class ClassEx {
	
	public static void main(String[] args) {

	}

}
